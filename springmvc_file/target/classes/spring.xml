<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/context
       http://www.springframework.org/schema/context/spring-context.xsd
       http://www.springframework.org/schema/tx
       http://www.springframework.org/schema/tx/spring-tx.xsd
">

    <!--读取properties文件-->
    <context:property-placeholder location="classpath:jdbc.properties"></context:property-placeholder>

    <!--扫描service层-->
    <context:component-scan base-package="com.msb.service"></context:component-scan>

    <!--配置德鲁伊连接池-->
    <bean id="dataSource" class="com.alibaba.druid.pool.DruidDataSource">
        <property name="username" value="${jdbc_username}"></property>
        <property name="password" value="${jdbc_password}"></property>
        <property name="url" value="${jdbc_url}"></property>
        <property name="driverClassName" value="${jdbc_driver}"></property>
    </bean>

    <!--配置SqlSessionFactory-->
    <!--spring整合mybatis：目的就是可以在service层注入mapper，
    mapper是由mybatis生成的，mapper=sqlSession.getMapper，
    现在SqlSessionFactory、SqlSession、**mapper全部交给spring创建-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
        <!--SqlSessionFactoryBean配置数据源、实体类别名包扫描-->
        <property name="dataSource" ref="dataSource"></property>
        <property name="typeAliasesPackage" value="com.msb.pojo"></property>
    </bean>

    <!--MapperScanner  mapper扫描仪   生成所有的Mapper对象并放入容器中-->
    <bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        <!--配置sqlSessionFactory-->
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory"></property>
        <!--扫描mapper-->
        <property name="basePackage" value="com.msb.mapper"></property>
    </bean>

    <!--配置一个事务管理器-->
    <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <!--将数据源注入事务管理器-->
        <!--必须要和mybatis用同一个数据源-->
        <property name="dataSource"  ref="dataSource"></property>
    </bean>

    <!--开启事务的注解-->
    <tx:annotation-driven transaction-manager="transactionManager"/>

    <!--文件上传解析组件
     id必须为multipartResolver
    springmvc默认使用该id找该组件
    -->
    <bean   id="multipartResolver"
            class="org.springframework.web.multipart.commons.CommonsMultipartResolver"></bean>
</beans>